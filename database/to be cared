不能直接进行表结构的设计,分析要存储的数据,数据的存储特点,数据的生命周期
(一)整数类型
（1）tinyint  smallint   mediumint  int    bigint
8位         16位       24位    32位    64位  
存值范围   -2（n-1）次方   ---    2（n-1）-1    
（2）unsigned  
不能为负数，这样正数的上限提高一倍，有无unsigned，存储空间都一样
对于存储和计算，int(1)和INT（20）是相同的，只是显示字符的个数不一样
（二）字符串类型
每个字符串列可以定义自己的字符集和排序规则，这个很影响性能
（1）VARCHAR类型
可变长字符串，更节省空间，仅使用必要的空间
适用：列的最大长度比平均长度大很多，更新少
（2）CHAR类型
定长，采用空格填充
适合：存储很短的字符串，常修改变更，列后面的空格会被截掉
VARCHAR(5)和VARCHAR（200）存储‘hello’空间开销一样，但是200更消耗内存，这在查询的时候很糟糕
（三）数据库优化
（1）sql与索引优化
sql优化技巧：明确哪些是需要进行优化的，mysql日志，查看是否开启慢查询日志，select variables like 'slow_query_log';查看到off，记录未使用索引的，
set global log_queries_not_using_indexs = on;
mysqldumpslow工具
适合：查询次数多
count  count(*),count('id')结果不一样，count(id)不计算null内容
max，max的字段加索引提高查询速度  
索引优化技巧：查询次数多，离散度高通过count()大的离散度更高
（2）数据表结构
int比varchar好
尽量用not null
少用text
INET_ATON  ip转int
INET_NTOA  ip转字符串
